<?php

/**
 * @file
 * Install, update and uninstall functions for the Opigno Messaging module.
 */

/**
 * Alter private_messages module configuration.
 *
 * On module install.
 */
function dyniva_private_message_install() {
  // private_message_thread.
  $config = \Drupal::configFactory()->getEditable('core.entity_view_display.private_message_thread.private_message_thread.default');
  $cfg = $config->get();
  $cfg['content']['field_pm_subject'] = [
    'label' => 'above',
    'region' => 'content',
    'weight' => -99,
    'type' => 'string',
    'third_party_settings' => [],
    'settings' => [
      'link_to_entity' => FALSE,
    ],
  ];
  unset($cfg['hidden']['field_pm_subject']);
  $cfg['content']['delete_link']['weight'] = -100;
  $cfg['content']['members']['label'] = 'hidden';
  $cfg['content']['private_messages']['label'] = 'hidden';
  $config->setData($cfg)->save();

  // private_message.
  $config = \Drupal::configFactory()->getEditable('core.entity_view_display.private_message.private_message.default');
  $cfg = $config->get();
  $cfg['content']['owner']['label'] = 'hidden';
  $cfg['hidden']['created'] = TRUE;
  unset($cfg['content']['created']);
  $config->setData($cfg)->save();

  // delete private message block
  $blockStorage = \Drupal::entityManager()->getStorage('block');
  $ids = $blockStorage->getQuery()
    ->condition('theme', 'bartik')
    ->condition('region', 'sidebar_first')
    ->execute();
  foreach($ids as $id) {
    $block = $blockStorage->load($id);
    $settings = $block->get('settings');
    if($settings['provider'] == 'private_message') {
        $block->delete();
    }
  }
  // set block
  $theme = 'bartik';
  $plugin_id = 'views_block:private_message-block_all';
  $block_id = 'views_block__private_message_block_all';
  $region = 'sidebar_first';
  $settings = [
    'id' => $block_id,
    'label' => '',
    'provider' => 'views',
    'label_display' => 0,
    "views_label" => '',
    "items_per_page" => 'none',
    "context_mapping" => []
  ];
  $block = $blockStorage->load($block_id);
  if(!$block) {
    $entity = $blockStorage->create(['plugin' => $plugin_id, 'theme' => $theme]);
    $entity->setRegion($region);
    $entity->set('id', $block_id);
    $entity->set('settings', $settings);
    $entity->set('visibility', [
      "request_path" => [
        "id" => "request_path",
        "pages" => "/private_messages\n/private_messages/*\n/private_message/*",
        "negate" => false,
        "context_mapping" => []
      ]
    ]);
    $entity->save();
  }
}
